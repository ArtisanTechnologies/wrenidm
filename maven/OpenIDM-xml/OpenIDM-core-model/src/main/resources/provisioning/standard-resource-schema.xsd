<?xml version="1.0" encoding="UTF-8"?>

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    targetNamespace="http://openidm.forgerock.com/xml/ns/resource/1#"
    xmlns:tns="http://openidm.forgerock.com/xml/ns/resource/1#"
    xmlns="http://openidm.forgerock.com/xml/ns/resource/1#"
    elementFormDefault="qualified">

    <xsd:annotation>
        <xsd:documentation>
            This is supposed to be "standard" resource schema. Good resource
            connectors/adapter/whatever will (hopefully) follow it and define
            sub-types based on abstract supertypes in this schema. Some examples
            of this are provided at the end of the document.
            
            This schema is considered dynamic. It means that the concrete schema
            of a specific resource will be only available in run-time. As this
            schema will not be available in build-time, JAX-B and similar tools
            cannot be used on it. Therefore the components that need to
            understand it must parse it in run-time and dynamically interpret
            it.

            The schema is using custom annotations to express facets of the
            resource schema that XSD does not support, such as readability/
            writability of attribute, reference target types, etc.
        </xsd:documentation>
    </xsd:annotation>

    <xsd:complexType name="AttributeReferenceType">
        <xsd:attribute name="ref" type="xsd:QName">
            <xsd:annotation>
                <xsd:documentation>
                    Refers to resource attribute name. The refered resource
                    attribute should be a property (see Identity Schema).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:complexType name="ObjectClassReferenceType">
        <xsd:attribute name="ref" type="xsd:QName">
            <xsd:annotation>
                <xsd:documentation>
                    Refers to resource attribute name. The refered resource
                    attribute should be a property (see Identity Schema).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:element name="identifier" type="AttributeReferenceType">
        <xsd:annotation>
            <xsd:documentation>
                        Specifies which resource attribute (property) is
                        identifier of a specific resource object type.

                        This element is supposed to be used as ANNOTATION in
                        resource schema.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>
    
    <xsd:element name="displayName" type="AttributeReferenceType">
        <xsd:annotation>
            <xsd:documentation>
                        Specifies which resource attribute (property) to use as
                        a title for a defined resource object type. It must be
                        of type xsd:string.
                        If not present defaults to identifier.

                        This element is supposed to be used as ANNOTATION in
                        resource schema.
            </xsd:documentation>
        </xsd:annotation>
    </xsd:element>

    <xsd:element name="resourceObjectReference">
        <xsd:annotation>
            <xsd:documentation>
                        Contains specification (QName) of a XSD type that is the
                        type of reference target objects.


                        It is used as an annnotation for attribute types that
                        point to resource objects, such as group members lists,
                        role lists, etc. The clients can use this annotation to
                        detect that the attribute points to a different object
                        and follow the reference or display it appropriatelly.

                        This element is supposed to be used as ANNOTATION in
                        resource schema.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="targetObjectClass" type="ObjectClassReferenceType"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="nativeObjectClass" type="xsd:string"/>

    <xsd:complexType name="AccountTypeType">
        <xsd:annotation>
            <xsd:documentation>
               TODO

               XSD ANNOTATION

            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="default" type="xsd:boolean" default="false">
            <xsd:annotation>
                <xsd:documentation>
                                                    Specifies whether this
                                                    account type is the default
                                                    account type for the resource.
                                                    Only one account type can be default.
                                                    Setting this flag for more than one
                                                    type is an error.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

    <xsd:element name="accountType" type="AccountTypeType"/>

    <xsd:complexType name="ResourceObjectClass" abstract="true">
        <xsd:annotation>
            <xsd:documentation>
                Common supertype for all resource objects. This may not be
                strictly necessary, but may come useful and it is not any
                extra weight to the system.
                
                TODO: More details

                Any non-abstract subtype of this type should have following
                XSD annotations:
                    identifier - mandatory
                    displayName - optional
    
                Question: How to define shchema for these annotations?
            </xsd:documentation>
        </xsd:annotation>
    </xsd:complexType>

<!-- Following definitions are to be considered only examples for now.
     These will be moved to a seprate namespace later, cleaned up and ligned
     with existing common terminology and/or connectors. -->

    <xsd:element name="objects">
        <xsd:annotation>
            <xsd:documentation>
                This element is just for testing and examples. Will be removed.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="object" type="ResourceObjectClass" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

</xsd:schema>

